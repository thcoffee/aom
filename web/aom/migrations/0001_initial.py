# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-09-28 03:58
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AomApp',
            fields=[
                ('appid', models.AutoField(primary_key=True, serialize=False)),
                ('appname', models.CharField(blank=True, max_length=50, null=True)),
                ('appcname', models.CharField(blank=True, max_length=50, null=True)),
                ('percentdep', models.IntegerField(blank=True, db_column='percentDep', null=True)),
                ('codectrl', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'aom_app',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AomApp2Jvm',
            fields=[
                ('app2jvmid', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'db_table': 'aom_app2jvm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AomAppserver',
            fields=[
                ('appserverid', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'aom_appserver',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AomAppserverType',
            fields=[
                ('appserver_type_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'aom_appserver_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AomCustom',
            fields=[
                ('customid', models.AutoField(primary_key=True, serialize=False)),
                ('customname', models.CharField(blank=True, max_length=50, null=True)),
                ('customcname', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': '客户设置',
                'verbose_name_plural': '客户设置',
                'db_table': 'aom_custom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AomEnvironment',
            fields=[
                ('envid', models.AutoField(primary_key=True, serialize=False)),
                ('envname', models.CharField(blank=True, max_length=50, null=True)),
                ('envcname', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'aom_environment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AomNginx',
            fields=[
                ('nginx_id', models.AutoField(primary_key=True, serialize=False)),
                ('basedir', models.CharField(blank=True, db_column='baseDir', max_length=1024, null=True)),
            ],
            options={
                'db_table': 'aom_nginx',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AomNode',
            fields=[
                ('nodeid', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('ip', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'aom_node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AomOs',
            fields=[
                ('osid', models.IntegerField(primary_key=True, serialize=False)),
                ('osname', models.CharField(blank=True, max_length=50, null=True)),
                ('osversion', models.CharField(blank=True, max_length=50, null=True)),
                ('osbit', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'aom_os',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AomProject',
            fields=[
                ('projectid', models.AutoField(primary_key=True, serialize=False)),
                ('projectname', models.CharField(blank=True, max_length=50, null=True)),
                ('projectcname', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'aom_project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AomSofttype',
            fields=[
                ('softtypeid', models.AutoField(primary_key=True, serialize=False)),
                ('softname', models.CharField(blank=True, max_length=50, null=True)),
                ('softversion', models.CharField(blank=True, max_length=50, null=True)),
                ('softpath', models.CharField(blank=True, max_length=1000, null=True)),
                ('softfiles', models.CharField(blank=True, max_length=1000, null=True)),
                ('defaultpath', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'aom_softtype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='test',
            fields=[
                ('tid', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='AomAppserverTomcat',
            fields=[
                ('appserverid', models.ForeignKey(db_column='appserverid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='aom.AomAppserver')),
                ('http_port', models.IntegerField(blank=True, null=True)),
                ('shutdown_port', models.IntegerField(blank=True, null=True)),
                ('apj_port', models.IntegerField(blank=True, null=True)),
                ('basedir', models.CharField(blank=True, db_column='baseDir', max_length=1024, null=True)),
                ('docbase', models.CharField(blank=True, db_column='docBase', max_length=1024, null=True)),
                ('appbase', models.CharField(blank=True, db_column='appBase', max_length=1024, null=True)),
                ('workdir', models.CharField(blank=True, db_column='workDir', max_length=1024, null=True)),
                ('javahome', models.CharField(blank=True, max_length=1024, null=True)),
                ('javaopts', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'aom_appserver_tomcat',
                'permissions': (('views_aomappserver_list', '查看学员信息表'), ('views_aomappserver_info', '查看学员详细信息')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AomAppSt',
            fields=[
                ('appid', models.ForeignKey(db_column='appid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='aom.AomApp')),
                ('stproject', models.CharField(blank=True, db_column='stProject', max_length=50, null=True)),
                ('stview', models.CharField(blank=True, db_column='stView', max_length=50, null=True)),
                ('stfolder', models.CharField(blank=True, db_column='stFolder', max_length=50, null=True)),
                ('mvnprofile', models.CharField(blank=True, db_column='mvnProfile', max_length=50, null=True)),
                ('appwar', models.CharField(blank=True, db_column='appWar', max_length=50, null=True)),
                ('approot', models.CharField(blank=True, db_column='appRoot', max_length=50, null=True)),
                ('checkpage', models.CharField(blank=True, db_column='checkPage', max_length=50, null=True)),
                ('checkkey', models.CharField(blank=True, db_column='checkKey', max_length=50, null=True)),
            ],
            options={
                'db_table': 'aom_app_st',
                'managed': False,
            },
        ),
    ]
